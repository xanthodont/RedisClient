# some infomation
# 日志级别：debug < info < warn < error
# 消息打印参数说明：
# %m 输出代码中指定的消息
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
# %r 输出自应用启动到输出该log信息耗费的毫秒数
# %c 输出所属的类目，通常就是所在类的全名
# %t 输出产生该日志事件的线程名
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %d 输出日志时间点的日期或时间
# %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
# ===================================== #
# Output to Java Console  输出到控制台
log4j.appender.standardout=org.apache.log4j.ConsoleAppender  
log4j.appender.standardout.Target=System.out
log4j.appender.standardout.layout=org.apache.log4j.PatternLayout
log4j.appender.standardout.layout.ConversionPattern = [%-4p]%d{yyyy-MM-dd HH:mm:ss} %l [%t] - %m%n
# ===================================== #
# Output to files 输出到文件
log4j.appender.files=org.apache.log4j.DailyRollingFileAppender
log4j.appender.files.File =/logs/RedisClient/info.log
log4j.appender.files.layout=org.apache.log4j.PatternLayout
log4j.appender.files.layout.ConversionPattern=[%-4p]%d{yyyy-MM-dd HH:mm:ss} %l [%t] - %m%n
# ===================================== #
# 配置日志输出级别
# 语法：log4j.rootLogger = [ level ] , appenderName, appenderName, …
log4j.rootCategory=DEBUG,standardout
# 配置包的接收级别
log4j.logger.com.konka.redis.client=DEBUG,standardout
log4j.logger.com.konka.redis.client.writer=DEBUG,standardout
